spring:
  application:
    name: transfer-service
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${TRANSFER_DB_URL:jdbc:postgresql://localhost:5433/transfer_db}
    username: ${TRANSFER_DB_USER:transfer_user}
    password: ${TRANSFER_DB_PWD}
    hikari:
      auto-commit: false
      maximum-pool-size: 10
      minimum-idle: 5
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      ddl-auto: create-drop
      format_sql: true
  jackson:
    default-property-inclusion: NON_EMPTY
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

management:
  endpoints:
    web:
      exposure:
        include: health, info
      base-path: /

server:
  port: 8080
  error:
    whitelabel:
      enabled: false

springdoc:
  swagger-ui:
    enabled: ${SWAGGER_ENABLED:false}
  api-docs:
    enabled: ${SWAGGER_ENABLED:false}

ledger:
  service:
    base-url: ${LEDGER_BASE_URL:http://localhost:8081}

transfer:
  batch:
    max-transfer-size: 20
    thread-pool-size: 10
    queue-capacity: 100
  idempotency:
    ttl: ${IDEMPOTENCY_TTL:2m} # ISO format
  outbox:
    max-retries: 5
    base-backoff-seconds: ${BASE_BACKOFF_SECONDS:30}

resilience4j.circuitbreaker:
    instances:
      ledgerApiCircuitBreaker:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 30s
        permittedNumberOfCallsInHalfOpenState: 3
        minimumNumberOfCalls: 4
        registerHealthIndicator: true

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} %-5level [%X{X-Request-ID}] %logger{36} - %msg%n"